install
cdrom
lang en_GB.UTF-8
keyboard uk
network --onboot yes --device eth0 --bootproto dhcp --noipv6
selinux --enforcing
rootpw --plaintext r00tpass
firewall --enabled --ssh
auth --enableshadow --passalgo=sha512
eula --agreed
timezone UTC
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet audit=1"

text
skipx
zerombr

clearpart --all --initlabel
part /boot      --asprimary     --fstype="ext4"        --size=512
part swap       --asprimary     --fstype="swap"        --size=4096
part pv.01 --size=45056 --ondisk=sda
volgroup vg00 pv.01

logvol /              --fstype="ext4" --name=lv_root          --vgname=vg00   --size=10240
logvol /home          --fstype="ext4" --name=lv_home          --vgname=vg00   --size=6144  --fsoptions nodev,nosuid,noexec
logvol /tmp           --fstype="ext4" --name=lv_tmp           --vgname=vg00   --size=2048  --fsoptions nodev,nosuid,noexec
logvol /var           --fstype="ext4" --name=lv_var           --vgname=vg00   --size=8192  --fsoptions nodev
logvol /var/log       --fstype="ext4" --name=lv_var_log       --vgname=vg00   --size=10240 --fsoptions nodev
logvol /var/log/audit --fstype="ext4" --name=lv_var_log_audit --vgname=vg00   --size=2048  --fsoptions nodev
logvol /opt           --fstype="ext4" --name=lv_opt           --vgname=vg00   --size=4096  --fsoptions nodev

firstboot --disabled
reboot
user --name=packer --plaintext --password packer --groups=pcker,wheel

%packages --ignoremissing --excludedocs
@core
bzip2
kernel-devel
kernel-headers
sudo

# Remove unecessary firmware
-aic94xx-firmware
-atmel-firmware
-b43-openfwwf
-bfa-firmware
-ipw2100-firmware
-ipw2200-firmware
-ivtv-firmware
-iwl100-firmware
-iwl1000-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6050-firmware
-libertas-usb8388-firmware
-ql2100-firmware
-ql2200-firmware
-ql23xx-firmware
-ql2400-firmware
-ql2500-firmware
-rt61pci-firmware
-rt73usb-firmware
-xorg-x11-drv-ati-firmware
-zd1211-firmware
%end

%post
# Add VMWare repo so we can install open-vm-tools
cat >> /etc/yum.repos.d/vmware-tools.repo << EOF
[vmware-tools]
name = VMware Tools
baseurl = http://packages.vmware.com/packages/rhel7/x86_64/
enabled = 1
gpgcheck = 1
gpgkey=https://packages.vmware.com/tools/keys/VMWARE-PACKAGING-GPG-RSA-KEY.pub
EOF

# Don't do a full yum update whilst testing as this massively increases the packer build time
# /usr/bin/yum update -y
/usr/bin/yum update -y
/usr/bin/yum -y install sudo aide screen yum-utils open-vm-tools-deploypkg

# Make sure packer has passwordless sudo rights
echo "packer        ALL=(ALL)       NOPASSWD: ALL" >> /etc/sudoers.d/packer
echo "Defaults:packer !requiretty" >> /etc/sudoers.d/packer
chmod 0440 /etc/sudoers.d/packer

# At the end of it all - clean up so we have a nice image
service rsyslog stop
service auditd stop
package-cleanup --oldkernels --count=1
yum clean all
/usr/sbin/logrotate –f /etc/logrotate.conf
rm –f /var/log/*-???????? /var/log/*.gz
rm -f /var/log/dmesg.old
rm -f /var/log/anaconda*
> /var/log/audit/audit.log
> /var/log/wtmp
> /var/log/lastlog
rm -f /etc/udev/rules.d/70*
sed -i '/^(HWADDR~UUID)=/d' /etc/sysconfig/network-scripts/ifcfg-eth0
rm -rf /tmp/*
rm -rf /var/tmp/*
rm -f /etc/ssh/*key*
rm -f ~root/.bash_history
unset HISTFILE
rm -f ~root/anaconda-ks.cfg
%end
